name: Cursor Pull Request Review

on:
  workflow_call:
    inputs:
      cached-build-id:
        required: true
        type: string
    secrets:
      CURSOR_PR_REVIEW:
        required: true

jobs:
  cursor-review:
    name: Cursor PR Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Use Node.js 24.x
        uses: actions/setup-node@v4
        with:
          node-version: "24.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Cursor CLI
        run: |
          curl https://cursor.com/install -fsS | bash
          echo "$HOME/.cursor/bin" >> $GITHUB_PATH

      - name: Load project rules
        run: |
          echo "Loading project rules from .cursor/rules directory..."
          ls -la .cursor/rules/
          echo "Available rules:"
          find .cursor/rules/ -name "*.mdc" -exec basename {} \;

      - name: Perform Cursor code review
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_PR_REVIEW }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        run: |
          cursor-agent --model "auto" --output-format=text -p "You are operating in a GitHub Actions runner performing automated code review. The gh CLI is available and authenticated via GH_TOKEN. Add comments on the pull requests with your findings.

          Context:
          - Repo: ${{ github.repository }}
          - PR Number: ${{ github.event.pull_request.number }}
          - PR Head SHA: ${{ github.event.pull_request.head.sha }}
          - PR Base SHA: ${{ github.event.pull_request.base.sha }}

          Objectives:
          1) Re-check existing review comments and reply resolved when addressed
          2) Review the current PR diff and flag only clear, high-severity issues
          3) Leave very short inline comments (1-2 sentences) on changed lines only and a brief summary at the end
          4) Enforce project-specific coding standards using the project's Cursor rules

          Procedure:
          - Get existing comments: gh pr view --json comments
          - Get diff: gh pr diff
          - If a previously reported issue appears fixed by nearby changes, reply: ‚úÖ This issue appears to be resolved by the recent changes
          - Avoid duplicates: skip if similar feedback already exists on or near the same lines
          - Apply project rules from .cursor/rules/ directory to ensure code follows established standards

          Project Rules to Apply:
          - Apply rules from .cursor/rules/ directory:
            * nextjs.mdc - Next.js development standards (root imports, Server Components, file organization)
            * react.mdc - React component standards (functional components, CSS Modules, clsx, hooks)
            * pure-functions.mdc - Pure function guidelines (extract logic, no side effects, testable)
            * styling-css-modules.mdc - CSS Modules standards (max depth 1, component-scoped, naming)
            * testing-unit-standards.mdc - Unit testing requirements (100% coverage, getByRole, user behavior)
            * testing-e2e-standards.mdc - E2E testing with Playwright (semantic roles, accessibility)
          - Ensure code follows the project's established patterns and conventions
          - Check for proper imports, component structure, styling, and testing practices

          Commenting rules:
          - Max 10 inline comments total; prioritize the most critical issues
          - One issue per comment; place on the exact changed line
          - Natural tone, specific and actionable; do not mention automated or high-confidence
          - Use emojis: üö® Critical üîí Security ‚ö° Performance ‚ö†Ô∏è Logic ‚úÖ Resolved ‚ú® Improvement üìã Standards üß™ Testing

          Submission:
          - Submit one review containing inline comments plus a concise summary
          - Use only: gh pr review --comment
          - Do not use: gh pr review --approve or --request-changes"
